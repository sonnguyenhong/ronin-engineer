---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: $CI_PROJECT_NAME
  namespace: $NAMESPACE
spec:
  replicas: 1
  progressDeadlineSeconds: 300
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 40%
      maxUnavailable: 0
  selector:
    matchLabels:
      name: $CI_PROJECT_NAME
  template:
    metadata:
      name: $CI_PROJECT_NAME
      labels:
        name: $CI_PROJECT_NAME
    spec:
      serviceAccountName: wi-payslip
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - name: $CI_PROJECT_NAME
          image: asia.gcr.io/vinid-devops/$CI_PROJECT_NAME:$IMAGE_TAG
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: $APP_PORT
          resources:
            requests:
              memory: "200Mi"
            limits:
              memory: "800Mi"
          envFrom:
            - configMapRef:
                name: $CI_PROJECT_NAME
            - secretRef:
                name: $CI_PROJECT_NAME
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: $APP_PORT
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 2
            successThreshold: 2
      restartPolicy: Always
      imagePullSecrets:
        - name: docker-image-pull-secret
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: $CI_PROJECT_NAME
  name: $CI_PROJECT_NAME
  namespace: $NAMESPACE
spec:
  ports:
    - name: http
      port: 80
      targetPort: $APP_PORT
  selector:
    name: $CI_PROJECT_NAME
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    #    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
  name: $JOB_NAME
  namespace: $NAMESPACE
spec:
  rules:
    - host: $HOST
      http:
        paths:
          - backend:
              service:
                name: $JOB_NAME
                port:
                  number: 80
            path: $SERVICE_PATH
            pathType: ImplementationSpecific